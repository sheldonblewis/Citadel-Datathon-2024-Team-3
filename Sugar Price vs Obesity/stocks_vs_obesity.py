# -*- coding: utf-8 -*-
"""Stocks vs Obesity

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U4_ZDV8weF5Nh_5DY29Hc5MlbIdLw4v1
"""

!pip install pandas
import pandas as pd

# Load the provided datasets
# Load the Nutrition and Obesity data
nutrition_data = pd.read_csv('/content/Nutrition_Physical_Activity_and_Obesity_Data.csv')

# Filter data for obesity rates
obesity_data = nutrition_data[nutrition_data['Class'].str.contains('Obesity', case=False)]

# Group by year and calculate average obesity rates
obesity_data_annual = obesity_data.groupby('YearStart')['Data_Value'].mean().reset_index()

# Display summary of the filtered data
obesity_data_annual.info(), obesity_data_annual.head()

import pandas as pd

# Load the Nutrition, Physical Activity, and Obesity data
nutrition_data = pd.read_csv('/content/Nutrition_Physical_Activity_and_Obesity_Data.csv')

# Filter data for obesity rates
obesity_data = nutrition_data[nutrition_data['Class'].str.contains('Obesity', case=False)]

# Group by year and calculate average obesity rates
obesity_data_annual = obesity_data.groupby('YearStart')['Data_Value'].mean().reset_index()

# Display summary of the filtered data
obesity_data_annual.info(), obesity_data_annual.head()

# Load the stock prices data
stock_data = pd.read_csv('/content/all_stock_and_etfs.csv')

# Convert 'Date-Time' column to datetime format
stock_data['Date-Time'] = pd.to_datetime(stock_data['Date-Time'])

print(stock_data.head())

# Filter stock data to only include relevant stocks (e.g., food-related stocks)
relevant_stocks = ['HRL', 'MCD', 'YUM', 'SBUX', 'CAG', 'DPZ', 'CMG', 'DRI', 'GIS', 'TSCO']  # Include relevant stock symbols
stock_data_filtered = stock_data[stock_data['Ticker_Symbol'].isin(relevant_stocks)]

# Aggregate stock data to yearly frequency (mean of 'Close' prices)
stock_data_annual = stock_data_filtered.set_index('Date-Time').groupby(['Ticker_Symbol', pd.Grouper(freq='Y')]).mean().reset_index()

# Display summary of the filtered stock data
stock_data_annual.info(), stock_data_annual.head()

# Merge the datasets on 'YearStart' and 'Date-Time'
merged_data_obesity_stock = pd.merge(obesity_data_annual, stock_data_annual, left_on=obesity_data_annual['YearStart'].dt.year, right_on=stock_data_annual['Date-Time'].dt.year, how='inner')

# Display summary of the merged data
merged_data_obesity_stock.info(), merged_data_obesity_stock.head()

import seaborn as sns
import matplotlib.pyplot as plt

# Pivot the merged data to create a heatmap-friendly format
pivot_data = merged_data_obesity_stock.pivot_table(values='Close', index='Date-Time', columns='Ticker_Symbol')

# Add the obesity rate column to the pivot table
pivot_data['ObesityRate'] = merged_data_obesity_stock.groupby('Date-Time')['Data_Value'].mean()

# Create a heatmap
plt.figure(figsize=(14, 7))
sns.heatmap(pivot_data, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Heatmap of Stock Prices and Obesity Rates Over Time')
plt.xlabel('Ticker Symbol and Obesity Rate')
plt.ylabel('Year')
plt.show()

import matplotlib.pyplot as plt

# Line plot of obesity rates over time
plt.figure(figsize=(14, 7))
plt.plot(merged_data['YearStart'], merged_data['Data_Value'], marker='o', label='Obesity Rate')
plt.xlabel('Year')
plt.ylabel('Obesity Rate (%)')
plt.title('Obesity Rates Over Time')
plt.legend()
plt.show()

# Line plot of stock prices over time for each ticker
plt.figure(figsize=(14, 7))
for ticker in relevant_stocks:
    subset = merged_data[merged_data['Ticker Symbol'] == ticker]
    plt.plot(subset['Year'], subset['Close'], marker='o', label=ticker)
plt.xlabel('Year')
plt.ylabel('Stock Close Price')
plt.title('Stock Prices Over Time')
plt.legend(title='Ticker Symbol')
plt.show()